services:
  mongodb:
    image: mongo:7.0
    container_name: four-in-a-row-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: four_in_a_row
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - four-in-a-row-network

  backend:
    build: ./backend
    container_name: four-in-a-row-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      MONGODB_URI: mongodb://mongodb:27017/four_in_a_row
      CORS_ORIGIN: http://localhost:3000
      KAFKA_BROKER: kafka:9092
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
      - kafka
    networks:
      - four-in-a-row-network

  frontend:
    build: ./frontend
    container_name: four-in-a-row-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_WS_URL: ws://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - four-in-a-row-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: four-in-a-row-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - four-in-a-row-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: four-in-a-row-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "29092:29092"
    networks:
      - four-in-a-row-network

volumes:
  mongodb_data:

networks:
  four-in-a-row-network:
    driver: bridge 